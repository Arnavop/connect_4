{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "//>md\n# Connect Four Game in JavaScript with Voice Control\n### Overview\nThis is a browser-based Connect Four game controlled via voice commands. It uses JavaScript to manage the game logic, and the Web Speech API for capturing and interpreting voice commands, providing a hands-free game experience.\n<br/>\n<br/>\n### Project Setup\nHTML: Sets up the game board and any on-screen instructions.\nCSS: Styles the game grid and tokens.\nJavaScript: Manages game logic, voice recognition, and UI updates.\n<br/>\n<br/>\n### How to Play\nPlayers speak commands to place their pieces in one of the columns on a 7x6 Connect Four board. The objective is to be the first to connect four discs in a row, either horizontally, vertically, or diagonally.\n\n",
      "status": "[3]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "<h1>Connect Four Game in JavaScript with Voice Control</h1>\n<h3>Overview</h3>\n<p>This is a browser-based Connect Four game controlled via voice commands. It uses JavaScript to manage the game logic, and the Web Speech API for capturing and interpreting voice commands, providing a hands-free game experience.\n<br>\n<br></p>\n<h3>Project Setup</h3>\n<p>HTML: Sets up the game board and any on-screen instructions.\nCSS: Styles the game grid and tokens.\nJavaScript: Manages game logic, voice recognition, and UI updates.\n<br>\n<br></p>\n<h3>How to Play</h3>\n<p>Players speak commands to place their pieces in one of the columns on a 7x6 Connect Four board. The objective is to be the first to connect four discs in a row, either horizontally, vertically, or diagonally.</p>\n <br>",
      "type": "code"
    },
    {
      "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Connect 4 - Play with Friends</title>\n    <style>\n        body {\n            margin: 0;\n            font-family: 'Arial', sans-serif;\n            background-color: #0f172a;\n            min-height: 100vh;\n            color: white;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n            width: 100%;\n        }\n\n        /* Home page styles */\n\t\t.home-page {\n\t\t  display: flex;\n\t\t  flex-direction: column;\n\t\t  align-items: center;\n\t\t  padding: 60px 20px;\n\t\t  background: linear-gradient(to bottom, rgba(15, 23, 42, 0.9), rgba(15, 23, 42, 0.95));\n\t\t  border-radius: 20px;\n\t\t  box-shadow: 0 0 50px rgba(56, 189, 248, 0.1);\n\t\t  position: relative;\n\t\t  overflow: hidden;\n\t\t}\n\n\n        .home-page::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            height: 1px;\n            background: linear-gradient(90deg, transparent, rgba(56, 189, 248, 0.3), transparent);\n        }\n\n        .home-page h1 {\n            font-size: 4.5em;\n            margin-bottom: 30px;\n            color: #fff;\n            text-shadow: 0 0 20px rgba(56, 189, 248, 0.5);\n            font-weight: 800;\n            letter-spacing: -0.03em;\n            background: linear-gradient(to right, #fff, #38bdf8);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n\n        .home-page p {\n            font-size: 1.4em;\n            margin-bottom: 50px;\n            color: #94a3b8;\n            line-height: 1.6;\n            max-width: 600px;\n            margin-left: auto;\n            margin-right: auto;\n        }\n\n        .play-button {\n            padding: 20px 50px;\n            font-size: 1.5em;\n            background: linear-gradient(45deg, #22c55e, #16a34a);\n            color: white;\n            border: none;\n            border-radius: 100px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.3);\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n\n        .play-button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(34, 197, 94, 0.4);\n            background: linear-gradient(45deg, #16a34a, #15803d);\n        }\n\n        .play-button:active {\n            transform: translateY(1px);\n        }\n\n        /* Game styles */\n        #gameContainer {\n            display: none;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n        }\n\n        .game-wrapper {\n            position: relative;\n            background: rgba(30, 41, 59, 0.95);\n            padding: 30px;\n            border-radius: 20px;\n            box-shadow: 0 0 40px rgba(56, 189, 248, 0.15);\n            border: 1px solid rgba(56, 189, 248, 0.1);\n        }\n\n        #gameCanvas {\n            border: 3px solid rgba(56, 189, 248, 0.3);\n            border-radius: 15px;\n            box-shadow: 0 0 30px rgba(56, 189, 248, 0.1);\n        }\n\n        #overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(15, 23, 42, 0.95);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border-radius: 20px;\n            backdrop-filter: blur(10px);\n        }\n\n        #gameStatus {\n            color: white;\n            font-size: 2.5em;\n            margin-bottom: 30px;\n            text-align: center;\n            font-weight: 700;\n            text-shadow: 0 0 20px rgba(56, 189, 248, 0.5);\n        }\n\n        .game-button {\n            padding: 15px 35px;\n            font-size: 1.2em;\n            background: linear-gradient(45deg, #22c55e, #16a34a);\n            color: white;\n            border: none;\n            border-radius: 100px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin: 8px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.3);\n        }\n\n        .game-button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(34, 197, 94, 0.4);\n        }\n\n        .home-button {\n            background: linear-gradient(45deg, #0ea5e9, #0284c7);\n            box-shadow: 0 4px 15px rgba(14, 165, 233, 0.3);\n        }\n\n        .home-button:hover {\n            box-shadow: 0 6px 20px rgba(14, 165, 233, 0.4);\n        }\n\n        /* Player turn indicator */\n        #playerTurn {\n            text-align: center;\n            margin: 25px 0;\n            font-size: 1.6em;\n            color: #94a3b8;\n            text-shadow: 0 0 10px rgba(56, 189, 248, 0.3);\n            padding: 15px 30px;\n            border-radius: 100px;\n            background: rgba(30, 41, 59, 0.5);\n            display: inline-block;\n            position: relative;\n            backdrop-filter: blur(5px);\n        }\n\n        .player-indicator {\n            display: inline-block;\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            margin-left: 15px;\n            vertical-align: middle;\n            box-shadow: 0 0 15px rgba(255, 255, 255, 0.3);\n        }\n\n        .player1 {\n            background: linear-gradient(45deg, #ef4444, #dc2626);\n        }\n\n        .player2 {\n            background: linear-gradient(45deg, #facc15, #eab308);\n        }\n\n        /* Responsive adjustments */\n        @media (max-width: 768px) {\n            .home-page h1 {\n                font-size: 3em;\n            }\n            \n            .home-page p {\n                font-size: 1.2em;\n                padding: 0 20px;\n            }\n            \n            .play-button {\n                padding: 15px 40px;\n                font-size: 1.3em;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div id=\"homePage\" class=\"home-page\">\n            <h1>Connect 4</h1>\n            <p>Challenge your friends to an exciting game of strategy and skill!</p>\n            <button class=\"play-button\" onclick=\"startGame()\">Play with Friends</button>\n        </div>\n\n        <div id=\"gameContainer\">\n            <div class=\"game-wrapper\">\n                <canvas id=\"gameCanvas\"></canvas>\n                <div id=\"overlay\">\n                    <div id=\"gameStatus\">Connect 4</div>\n                    <div>\n                        <button class=\"game-button\" id=\"startButton\">Start Game</button>\n                        <button class=\"game-button home-button\" onclick=\"showHome()\">Home</button>\n                    </div>\n                </div>\n            </div>\n            <div id=\"playerTurn\">\n                Player 1's Turn <span class=\"player-indicator player1\"></span>\n            </div>\n        </div>\n    </div>\n    <script src=\"game.js\"></script>\n</body>\n</html>",
      "status": "",
      "output": "\n\n\n    <title>Connect 4 - Play with Friends</title>\n    <style>\n        body {\n            margin: 0;\n            font-family: 'Arial', sans-serif;\n            background-color: #0f172a;\n            min-height: 100vh;\n            color: white;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n            width: 100%;\n        }\n\n        /* Home page styles */\n\t\t.home-page {\n\t\t  display: flex;\n\t\t  flex-direction: column;\n\t\t  align-items: center;\n\t\t  padding: 60px 20px;\n\t\t  background: linear-gradient(to bottom, rgba(15, 23, 42, 0.9), rgba(15, 23, 42, 0.95));\n\t\t  border-radius: 20px;\n\t\t  box-shadow: 0 0 50px rgba(56, 189, 248, 0.1);\n\t\t  position: relative;\n\t\t  overflow: hidden;\n\t\t}\n\n\n        .home-page::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            height: 1px;\n            background: linear-gradient(90deg, transparent, rgba(56, 189, 248, 0.3), transparent);\n        }\n\n        .home-page h1 {\n            font-size: 4.5em;\n            margin-bottom: 30px;\n            color: #fff;\n            text-shadow: 0 0 20px rgba(56, 189, 248, 0.5);\n            font-weight: 800;\n            letter-spacing: -0.03em;\n            background: linear-gradient(to right, #fff, #38bdf8);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n\n        .home-page p {\n            font-size: 1.4em;\n            margin-bottom: 50px;\n            color: #94a3b8;\n            line-height: 1.6;\n            max-width: 600px;\n            margin-left: auto;\n            margin-right: auto;\n        }\n\n        .play-button {\n            padding: 20px 50px;\n            font-size: 1.5em;\n            background: linear-gradient(45deg, #22c55e, #16a34a);\n            color: white;\n            border: none;\n            border-radius: 100px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.3);\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n\n        .play-button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(34, 197, 94, 0.4);\n            background: linear-gradient(45deg, #16a34a, #15803d);\n        }\n\n        .play-button:active {\n            transform: translateY(1px);\n        }\n\n        /* Game styles */\n        #gameContainer {\n            display: none;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n        }\n\n        .game-wrapper {\n            position: relative;\n            background: rgba(30, 41, 59, 0.95);\n            padding: 30px;\n            border-radius: 20px;\n            box-shadow: 0 0 40px rgba(56, 189, 248, 0.15);\n            border: 1px solid rgba(56, 189, 248, 0.1);\n        }\n\n        #gameCanvas {\n            border: 3px solid rgba(56, 189, 248, 0.3);\n            border-radius: 15px;\n            box-shadow: 0 0 30px rgba(56, 189, 248, 0.1);\n        }\n\n        #overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(15, 23, 42, 0.95);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            border-radius: 20px;\n            backdrop-filter: blur(10px);\n        }\n\n        #gameStatus {\n            color: white;\n            font-size: 2.5em;\n            margin-bottom: 30px;\n            text-align: center;\n            font-weight: 700;\n            text-shadow: 0 0 20px rgba(56, 189, 248, 0.5);\n        }\n\n        .game-button {\n            padding: 15px 35px;\n            font-size: 1.2em;\n            background: linear-gradient(45deg, #22c55e, #16a34a);\n            color: white;\n            border: none;\n            border-radius: 100px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin: 8px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.3);\n        }\n\n        .game-button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 20px rgba(34, 197, 94, 0.4);\n        }\n\n        .home-button {\n            background: linear-gradient(45deg, #0ea5e9, #0284c7);\n            box-shadow: 0 4px 15px rgba(14, 165, 233, 0.3);\n        }\n\n        .home-button:hover {\n            box-shadow: 0 6px 20px rgba(14, 165, 233, 0.4);\n        }\n\n        /* Player turn indicator */\n        #playerTurn {\n            text-align: center;\n            margin: 25px 0;\n            font-size: 1.6em;\n            color: #94a3b8;\n            text-shadow: 0 0 10px rgba(56, 189, 248, 0.3);\n            padding: 15px 30px;\n            border-radius: 100px;\n            background: rgba(30, 41, 59, 0.5);\n            display: inline-block;\n            position: relative;\n            backdrop-filter: blur(5px);\n        }\n\n        .player-indicator {\n            display: inline-block;\n            width: 24px;\n            height: 24px;\n            border-radius: 50%;\n            margin-left: 15px;\n            vertical-align: middle;\n            box-shadow: 0 0 15px rgba(255, 255, 255, 0.3);\n        }\n\n        .player1 {\n            background: linear-gradient(45deg, #ef4444, #dc2626);\n        }\n\n        .player2 {\n            background: linear-gradient(45deg, #facc15, #eab308);\n        }\n\n        /* Responsive adjustments */\n        @media (max-width: 768px) {\n            .home-page h1 {\n                font-size: 3em;\n            }\n            \n            .home-page p {\n                font-size: 1.2em;\n                padding: 0 20px;\n            }\n            \n            .play-button {\n                padding: 15px 40px;\n                font-size: 1.3em;\n            }\n        }\n    </style>\n\n\n    <div class=\"container\">\n        <div id=\"homePage\" class=\"home-page\" style=\"display: none;\">\n            <h1>Connect 4</h1>\n            <p>Challenge your friends to an exciting game of strategy and skill!</p>\n            <button class=\"play-button\" onclick=\"startGame()\">Play with Friends</button>\n        </div>\n\n        <div id=\"gameContainer\" style=\"display: flex;\">\n            <div class=\"game-wrapper\">\n                <canvas id=\"gameCanvas\" width=\"560\" height=\"480\"></canvas>\n                <div id=\"overlay\" style=\"display: none;\">\n                    <div id=\"gameStatus\">Connect 4</div>\n                    <div>\n                        <button class=\"game-button\" id=\"startButton\">Start Game</button>\n                        <button class=\"game-button home-button\" onclick=\"showHome()\">Home</button>\n                    </div>\n                </div>\n            </div>\n            <div id=\"playerTurn\">Player 2's Turn <span class=\"player-indicator player2\"></span></div>\n        </div>\n    </div>\n    <script src=\"game.js\"></script>\n\n",
      "type": "html"
    },
    {
      "code": "const canvas = document.getElementById('gameCanvas');\n        const ctx = canvas.getContext('2d');\n        const overlay = document.getElementById('overlay');\n        const startButton = document.getElementById('startButton');\n        const playerTurnDisplay = document.getElementById('playerTurn');\n        let gameStarted = false;\n        let gameOver = false;\n        let currentPlayer = 1;\n        let animatingPiece = null;\n\n        // Board properties\n        const ROWS = 6;\n        const COLS = 7;\n        const CELL_SIZE = 80;\n        const PIECE_RADIUS = (CELL_SIZE / 2) - 5;\n        let board = Array(ROWS).fill().map(() => Array(COLS).fill(0));\n\n        // Initialize canvas size\n        canvas.width = COLS * CELL_SIZE;\n        canvas.height = ROWS * CELL_SIZE;\n\n        // Colors\n        const BOARD_COLOR = '#0066CC';\n        const EMPTY_COLOR = '#FFFFFF';\n        const PLAYER1_COLOR = '#FF0000';\n        const PLAYER2_COLOR = '#FFDD00';\n\n        function showHome() {\n            document.getElementById('homePage').style.display = 'block';\n            document.getElementById('gameContainer').style.display = 'none';\n            resetGame();\n        }\n\n        function startGame() {\n            document.getElementById('homePage').style.display = 'none';\n            document.getElementById('gameContainer').style.display = 'flex';\n            overlay.style.display = 'flex';\n            gameStarted = false;\n            resetGame();\n        }\n\n        function updatePlayerTurn() {\n            const playerNum = currentPlayer;\n            const playerColor = playerNum === 1 ? 'player1' : 'player2';\n            playerTurnDisplay.innerHTML = `Player ${playerNum}'s Turn <span class=\"player-indicator ${playerColor}\"></span>`;\n        }\n\n        function drawBoard() {\n            // Draw blue background\n            ctx.fillStyle = BOARD_COLOR;\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            // Draw circles for each cell\n            for (let row = 0; row < ROWS; row++) {\n                for (let col = 0; col < COLS; col++) {\n                    const x = col * CELL_SIZE + CELL_SIZE / 2;\n                    const y = row * CELL_SIZE + CELL_SIZE / 2;\n\n                    ctx.beginPath();\n                    ctx.arc(x, y, PIECE_RADIUS, 0, Math.PI * 2);\n                    \n                    if (board[row][col] === 0) {\n                        ctx.fillStyle = EMPTY_COLOR;\n                    } else if (board[row][col] === 1) {\n                        ctx.fillStyle = PLAYER1_COLOR;\n                    } else {\n                        ctx.fillStyle = PLAYER2_COLOR;\n                    }\n                    \n                    ctx.fill();\n                    ctx.closePath();\n                }\n            }\n\n            // Draw falling piece animation if exists\n            if (animatingPiece) {\n                const { col, currentY, targetY, player } = animatingPiece;\n                const x = col * CELL_SIZE + CELL_SIZE / 2;\n\n                ctx.beginPath();\n                ctx.arc(x, currentY, PIECE_RADIUS, 0, Math.PI * 2);\n                ctx.fillStyle = player === 1 ? PLAYER1_COLOR : PLAYER2_COLOR;\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n\n        function animatePieceFall(row, col, player) {\n            const startY = CELL_SIZE / 2;\n            const targetY = row * CELL_SIZE + CELL_SIZE / 2;\n            const animationDuration = 500; // ms\n            const startTime = Date.now();\n\n            animatingPiece = {\n                col,\n                currentY: startY,\n                targetY,\n                player\n            };\n\n            function animate() {\n                const currentTime = Date.now();\n                const elapsed = currentTime - startTime;\n                const progress = Math.min(elapsed / animationDuration, 1);\n\n                // Easing function for more natural falling\n                const easeProgress = 1 - Math.pow(1 - progress, 2);\n                \n                animatingPiece.currentY = startY + (targetY - startY) * easeProgress;\n                drawBoard();\n\n                if (progress < 1) {\n                    requestAnimationFrame(animate);\n                } else {\n                    animatingPiece = null;\n                    board[row][col] = player;\n                    drawBoard();\n                    \n                    if (checkWin(row, col, player)) {\n                        gameOver = true;\n                        overlay.style.display = \"flex\";\n                        startButton.textContent = \"Play Again\";\n                        document.getElementById('gameStatus').textContent = `Player ${player} Wins!`;\n                        return;\n                    }\n\n                    if (checkDraw()) {\n                        gameOver = true;\n                        overlay.style.display = \"flex\";\n                        startButton.textContent = \"Play Again\";\n                        document.getElementById('gameStatus').textContent = \"It's a Draw!\";\n                        return;\n                    }\n\n                    currentPlayer = currentPlayer === 1 ? 2 : 1;\n                    updatePlayerTurn();\n                }\n            }\n\n            animate();\n        }\n\n        function getColumnFromX(x) {\n            return Math.floor(x / CELL_SIZE);\n        }\n\n        function findLowestEmptyRow(col) {\n            for (let row = ROWS - 1; row >= 0; row--) {\n                if (board[row][col] === 0) {\n                    return row;\n                }\n            }\n            return -1;\n        }\n\n        function checkWin(row, col, player) {\n            // Check horizontal\n            for (let c = 0; c <= COLS - 4; c++) {\n                if (board[row][c] === player &&\n                    board[row][c + 1] === player &&\n                    board[row][c + 2] === player &&\n                    board[row][c + 3] === player) {\n                    return true;\n                }\n            }\n\n            // Check vertical\n            for (let r = 0; r <= ROWS - 4; r++) {\n                if (board[r][col] === player &&\n                    board[r + 1][col] === player &&\n                    board[r + 2][col] === player &&\n                    board[r + 3][col] === player) {\n                    return true;\n                }\n            }\n\n            // Check diagonal (positive slope)\n            for (let r = 3; r < ROWS; r++) {\n                for (let c = 0; c <= COLS - 4; c++) {\n                    if (board[r][c] === player &&\n                        board[r - 1][c + 1] === player &&\n                        board[r - 2][c + 2] === player &&\n                        board[r - 3][c + 3] === player) {\n                        return true;\n                    }\n                }\n            }\n\n            // Check diagonal (negative slope)\n            for (let r = 0; r <= ROWS - 4; r++) {\n                for (let c = 0; c <= COLS - 4; c++) {\n                    if (board[r][c] === player &&\n                        board[r + 1][c + 1] === player &&\n                        board[r + 2][c + 2] === player &&\n                        board[r + 3][c + 3] === player) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        function checkDraw() {\n            return board[0].every(cell => cell !== 0);\n        }\n\n        function resetGame() {\n            board = Array(ROWS).fill().map(() => Array(COLS).fill(0));\n            currentPlayer = 1;\n            gameOver = false;\n            animatingPiece = null;\n            updatePlayerTurn();\n            drawBoard();\n        }\n\n        canvas.addEventListener('click', (event) => {\n            if (!gameStarted || gameOver || animatingPiece) return;\n\n            const rect = canvas.getBoundingClientRect();\n            const x = event.clientX - rect.left;\n            const col = getColumnFromX(x);\n            const row = findLowestEmptyRow(col);\n\n            if (row !== -1) {\n                animatePieceFall(row, col, currentPlayer);\n            }\n        });\n\n        startButton.addEventListener('click', () => {\n            overlay.style.display = \"none\";\n            resetGame();\n            gameStarted = true;\n        });\n\n        // Initial board draw\n        drawBoard();",
      "status": "[4]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}